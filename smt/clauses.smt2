(set-logic QF_LRA)
(set-option :print-success false)
(declare-const oa Real)
(assert (and (<= (- 0.0) oa) (<= oa 0.0)))
(declare-const a0 Real)
(declare-const ea0 Real)
(assert (and (<= (- 0.0) ea0) (<= ea0 0.0)))
(declare-const ma0 Real)
(assert (= ma0 3))
(assert (= (+ a0 oa ea0) ma0))
(declare-const a1 Real)
(declare-const ea1 Real)
(assert (and (<= (- 0.0) ea1) (<= ea1 0.0)))
(declare-const ma1 Real)
(assert (= ma1 3))
(assert (= (+ a1 oa ea1) ma1))
(declare-const a2 Real)
(declare-const ea2 Real)
(assert (and (<= (- 0.0) ea2) (<= ea2 0.0)))
(declare-const ma2 Real)
(assert (= ma2 3))
(assert (= (+ a2 oa ea2) ma2))
(declare-const a3 Real)
(declare-const ea3 Real)
(assert (and (<= (- 0.0) ea3) (<= ea3 0.0)))
(declare-const ma3 Real)
(assert (= ma3 3))
(assert (= (+ a3 oa ea3) ma3))
(declare-const a4 Real)
(declare-const ea4 Real)
(assert (and (<= (- 0.0) ea4) (<= ea4 0.0)))
(declare-const ma4 Real)
(assert (= ma4 3))
(assert (= (+ a4 oa ea4) ma4))
(declare-const oc Real)
(assert (and (<= (- 0.0) oc) (<= oc 0.0)))
(declare-const c0 Real)
(declare-const ec0 Real)
(assert (and (<= (- 0.5) ec0) (<= ec0 0.5)))
(declare-const mc0 Real)
(assert (= mc0 2))
(assert (= (+ c0 oc ec0) mc0))
(declare-const c1 Real)
(declare-const ec1 Real)
(assert (and (<= (- 0.5) ec1) (<= ec1 0.5)))
(declare-const mc1 Real)
(assert (= mc1 2))
(assert (= (+ c1 oc ec1) mc1))
(declare-const c2 Real)
(declare-const ec2 Real)
(assert (and (<= (- 0.5) ec2) (<= ec2 0.5)))
(declare-const mc2 Real)
(assert (= mc2 2))
(assert (= (+ c2 oc ec2) mc2))
(declare-const c3 Real)
(declare-const ec3 Real)
(assert (and (<= (- 0.5) ec3) (<= ec3 0.5)))
(declare-const mc3 Real)
(assert (= mc3 2))
(assert (= (+ c3 oc ec3) mc3))
(declare-const c4 Real)
(declare-const ec4 Real)
(assert (and (<= (- 0.5) ec4) (<= ec4 0.5)))
(declare-const mc4 Real)
(assert (= mc4 2))
(assert (= (+ c4 oc ec4) mc4))
(declare-const ob Real)
(assert (and (<= (- 0.0) ob) (<= ob 0.0)))
(declare-const b0 Real)
(declare-const eb0 Real)
(assert (and (<= (- 0.0) eb0) (<= eb0 0.0)))
(declare-const mb0 Real)
(assert (= mb0 1))
(assert (= (+ b0 ob eb0) mb0))
(declare-const b1 Real)
(declare-const eb1 Real)
(assert (and (<= (- 0.0) eb1) (<= eb1 0.0)))
(declare-const mb1 Real)
(assert (= mb1 1))
(assert (= (+ b1 ob eb1) mb1))
(declare-const b2 Real)
(declare-const eb2 Real)
(assert (and (<= (- 0.0) eb2) (<= eb2 0.0)))
(declare-const mb2 Real)
(assert (= mb2 1))
(assert (= (+ b2 ob eb2) mb2))
(declare-const b3 Real)
(declare-const eb3 Real)
(assert (and (<= (- 0.0) eb3) (<= eb3 0.0)))
(declare-const mb3 Real)
(assert (= mb3 1))
(assert (= (+ b3 ob eb3) mb3))
(declare-const b4 Real)
(declare-const eb4 Real)
(assert (and (<= (- 0.0) eb4) (<= eb4 0.0)))
(declare-const mb4 Real)
(assert (= mb4 1))
(assert (= (+ b4 ob eb4) mb4))
(declare-const p2 Bool)
(declare-const p4 Bool)
(declare-const p7 Bool)
(declare-const p5 Bool)
(declare-const p1 Bool)
(declare-const p3 Bool)
(declare-const p6 Bool)
(assert (and (or (not p2) (>= (+ a0 b0) 4)) (or (not p2) (>= (+ a1 b1) 4)) (or (not p2) p1) (or p2 (not (>= (+ a0 b0) 4)) (not (>= (+ a1 b1) 4)) (not p1)) (or (not p4) (>= (+ a0 b0) 4)) (or (not p4) (>= (+ a1 b1) 4)) (or (not p4) (>= (+ a2 b2) 4)) (or (not p4) p3) (or p4 (not (>= (+ a0 b0) 4)) (not (>= (+ a1 b1) 4)) (not (>= (+ a2 b2) 4)) (not p3)) (or (not p6) (>= (+ a0 b0) 4)) (or (not p6) (>= (+ a1 b1) 4)) (or (not p6) (>= (+ a2 b2) 4)) (or (not p6) (>= (+ a3 b3) 4)) (or (not p6) p5) (or p6 (not (>= (+ a0 b0) 4)) (not (>= (+ a1 b1) 4)) (not (>= (+ a2 b2) 4)) (not (>= (+ a3 b3) 4)) (not p5)) (or (not p2) p7) (or (not p4) p7) (or (not p6) p7) (or (not p7) p2 p4 p6) (or p7) (or (and (>= (+ a0 b0) 4) (>= (+ a1 b1) 4) (>= c2 2)) (and (>= (+ a0 b0) 4) (>= (+ a1 b1) 4) (>= (+ a2 b2) 4) (>= c3 2)) (and (>= (+ a0 b0) 4) (>= (+ a1 b1) 4) (>= (+ a2 b2) 4) (>= (+ a3 b3) 4) (>= c4 2)))))
(check-sat)
