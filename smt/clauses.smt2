(set-logic QF_LRA)
(set-option :print-success false)
(declare-const ox Real)
(assert (and (<= (- 0.5) ox) (<= ox 0.5)))
(declare-const x1 Real)
(declare-const ex1 Real)
(assert (and (<= (- 0.5) ex1) (<= ex1 0.5)))
(declare-const mx1 Real)
(assert (= mx1 3))
(assert (= (+ x1 ox ex1) mx1))
(declare-const x2 Real)
(declare-const ex2 Real)
(assert (and (<= (- 0.5) ex2) (<= ex2 0.5)))
(declare-const mx2 Real)
(assert (= mx2 4))
(assert (= (+ x2 ox ex2) mx2))
(declare-const x3 Real)
(declare-const ex3 Real)
(assert (and (<= (- 0.5) ex3) (<= ex3 0.5)))
(declare-const mx3 Real)
(assert (= mx3 5))
(assert (= (+ x3 ox ex3) mx3))
(declare-const oz Real)
(assert (and (<= (- 0.5) oz) (<= oz 0.5)))
(declare-const z1 Real)
(declare-const ez1 Real)
(assert (and (<= (- 0.5) ez1) (<= ez1 0.5)))
(declare-const mz1 Real)
(assert (= mz1 3))
(assert (= (+ z1 oz ez1) mz1))
(declare-const z2 Real)
(declare-const ez2 Real)
(assert (and (<= (- 0.5) ez2) (<= ez2 0.5)))
(declare-const mz2 Real)
(assert (= mz2 3))
(assert (= (+ z2 oz ez2) mz2))
(declare-const z3 Real)
(declare-const ez3 Real)
(assert (and (<= (- 0.5) ez3) (<= ez3 0.5)))
(declare-const mz3 Real)
(assert (= mz3 5))
(assert (= (+ z3 oz ez3) mz3))
(declare-const p9 Bool)
(declare-const p8 Bool)
(declare-const p5 Bool)
(declare-const p4 Bool)
(declare-const p10 Bool)
(declare-const p2 Bool)
(declare-const p7 Bool)
(declare-const p3 Bool)
(declare-const p1 Bool)
(declare-const p6 Bool)
(assert (and (or (not p2) p1) (or p2 (not p1)) (or (not p5) p3) (or (not p5) p4) (or p5 (not p3) (not p4)) (or (not p9) p6) (or (not p9) p7) (or (not p9) p8) (or p9 (not p6) (not p7) (not p8)) (or (not p2) p10) (or (not p5) p10) (or (not p9) p10) (or (not p10) p2 p5 p9) (or p10) (or (not p1) (>= z1 2)) (or p1 (not (>= z1 2))) (or (not p2) (and p1)) (or p2 (not (and p1))) (or (not p3) (>= x1 3)) (or p3 (not (>= x1 3))) (or (not p4) (>= z2 2)) (or p4 (not (>= z2 2))) (or (not p5) (and p3 p4)) (or p5 (not (and p3 p4))) (or (not p6) (>= x1 3)) (or p6 (not (>= x1 3))) (or (not p7) (>= x2 3)) (or p7 (not (>= x2 3))) (or (not p8) (>= z3 2)) (or p8 (not (>= z3 2))) (or (not p9) (and p6 p7 p8)) (or p9 (not (and p6 p7 p8)))))
(check-sat)
