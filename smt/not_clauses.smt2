(set-logic QF_LRA)
(set-option :print-success false)
(declare-const ox Real)
(assert (and (<= (- 0.0) ox) (<= ox 0.0)))
(declare-const x0 Real)
(declare-const ex0 Real)
(assert (and (<= (- 0.0) ex0) (<= ex0 0.0)))
(declare-const mx0 Real)
(assert (= mx0 3))
(assert (= (+ x0 ox ex0) mx0))
(declare-const x1 Real)
(declare-const ex1 Real)
(assert (and (<= (- 0.0) ex1) (<= ex1 0.0)))
(declare-const mx1 Real)
(assert (= mx1 3))
(assert (= (+ x1 ox ex1) mx1))
(declare-const x2 Real)
(declare-const ex2 Real)
(assert (and (<= (- 0.0) ex2) (<= ex2 0.0)))
(declare-const mx2 Real)
(assert (= mx2 3))
(assert (= (+ x2 ox ex2) mx2))
(declare-const x3 Real)
(declare-const ex3 Real)
(assert (and (<= (- 0.0) ex3) (<= ex3 0.0)))
(declare-const mx3 Real)
(assert (= mx3 3))
(assert (= (+ x3 ox ex3) mx3))
(declare-const x4 Real)
(declare-const ex4 Real)
(assert (and (<= (- 0.0) ex4) (<= ex4 0.0)))
(declare-const mx4 Real)
(assert (= mx4 3))
(assert (= (+ x4 ox ex4) mx4))
(declare-const x5 Real)
(declare-const ex5 Real)
(assert (and (<= (- 0.0) ex5) (<= ex5 0.0)))
(declare-const mx5 Real)
(assert (= mx5 3))
(assert (= (+ x5 ox ex5) mx5))
(declare-const x6 Real)
(declare-const ex6 Real)
(assert (and (<= (- 0.0) ex6) (<= ex6 0.0)))
(declare-const mx6 Real)
(assert (= mx6 3))
(assert (= (+ x6 ox ex6) mx6))
(declare-const x7 Real)
(declare-const ex7 Real)
(assert (and (<= (- 0.0) ex7) (<= ex7 0.0)))
(declare-const mx7 Real)
(assert (= mx7 3))
(assert (= (+ x7 ox ex7) mx7))
(declare-const oy Real)
(assert (and (<= (- 0.0) oy) (<= oy 0.0)))
(declare-const y0 Real)
(declare-const ey0 Real)
(assert (and (<= (- 0.0) ey0) (<= ey0 0.0)))
(declare-const my0 Real)
(assert (= my0 3))
(assert (= (+ y0 oy ey0) my0))
(declare-const y1 Real)
(declare-const ey1 Real)
(assert (and (<= (- 0.0) ey1) (<= ey1 0.0)))
(declare-const my1 Real)
(assert (= my1 3))
(assert (= (+ y1 oy ey1) my1))
(declare-const y2 Real)
(declare-const ey2 Real)
(assert (and (<= (- 0.0) ey2) (<= ey2 0.0)))
(declare-const my2 Real)
(assert (= my2 3))
(assert (= (+ y2 oy ey2) my2))
(declare-const y3 Real)
(declare-const ey3 Real)
(assert (and (<= (- 0.0) ey3) (<= ey3 0.0)))
(declare-const my3 Real)
(assert (= my3 3))
(assert (= (+ y3 oy ey3) my3))
(declare-const y4 Real)
(declare-const ey4 Real)
(assert (and (<= (- 0.0) ey4) (<= ey4 0.0)))
(declare-const my4 Real)
(assert (= my4 3))
(assert (= (+ y4 oy ey4) my4))
(declare-const y5 Real)
(declare-const ey5 Real)
(assert (and (<= (- 0.0) ey5) (<= ey5 0.0)))
(declare-const my5 Real)
(assert (= my5 3))
(assert (= (+ y5 oy ey5) my5))
(declare-const y6 Real)
(declare-const ey6 Real)
(assert (and (<= (- 0.0) ey6) (<= ey6 0.0)))
(declare-const my6 Real)
(assert (= my6 3))
(assert (= (+ y6 oy ey6) my6))
(declare-const y7 Real)
(declare-const ey7 Real)
(assert (and (<= (- 0.0) ey7) (<= ey7 0.0)))
(declare-const my7 Real)
(assert (= my7 3))
(assert (= (+ y7 oy ey7) my7))
(declare-const oz Real)
(assert (and (<= (- 0.0) oz) (<= oz 0.0)))
(declare-const z0 Real)
(declare-const ez0 Real)
(assert (and (<= (- 0.5) ez0) (<= ez0 0.5)))
(declare-const mz0 Real)
(assert (= mz0 2))
(assert (= (+ z0 oz ez0) mz0))
(declare-const z1 Real)
(declare-const ez1 Real)
(assert (and (<= (- 0.5) ez1) (<= ez1 0.5)))
(declare-const mz1 Real)
(assert (= mz1 2))
(assert (= (+ z1 oz ez1) mz1))
(declare-const z2 Real)
(declare-const ez2 Real)
(assert (and (<= (- 0.5) ez2) (<= ez2 0.5)))
(declare-const mz2 Real)
(assert (= mz2 2))
(assert (= (+ z2 oz ez2) mz2))
(declare-const z3 Real)
(declare-const ez3 Real)
(assert (and (<= (- 0.5) ez3) (<= ez3 0.5)))
(declare-const mz3 Real)
(assert (= mz3 2))
(assert (= (+ z3 oz ez3) mz3))
(declare-const z4 Real)
(declare-const ez4 Real)
(assert (and (<= (- 0.5) ez4) (<= ez4 0.5)))
(declare-const mz4 Real)
(assert (= mz4 2))
(assert (= (+ z4 oz ez4) mz4))
(declare-const z5 Real)
(declare-const ez5 Real)
(assert (and (<= (- 0.5) ez5) (<= ez5 0.5)))
(declare-const mz5 Real)
(assert (= mz5 2))
(assert (= (+ z5 oz ez5) mz5))
(declare-const z6 Real)
(declare-const ez6 Real)
(assert (and (<= (- 0.5) ez6) (<= ez6 0.5)))
(declare-const mz6 Real)
(assert (= mz6 2))
(assert (= (+ z6 oz ez6) mz6))
(declare-const z7 Real)
(declare-const ez7 Real)
(assert (and (<= (- 0.5) ez7) (<= ez7 0.5)))
(declare-const mz7 Real)
(assert (= mz7 2))
(assert (= (+ z7 oz ez7) mz7))
(declare-const p1 Bool)
(declare-const p8 Bool)
(declare-const p9 Bool)
(declare-const p3 Bool)
(declare-const p10 Bool)
(declare-const p12 Bool)
(declare-const p2 Bool)
(declare-const p5 Bool)
(declare-const p11 Bool)
(declare-const p4 Bool)
(declare-const p7 Bool)
(declare-const p13 Bool)
(declare-const p6 Bool)
(assert (and (and (or p3 (not p1) (not p2)) (or (not p3) p1) (or (not p3) p2) (or p7 (not p4) (not p5) (not p6)) (or (not p7) p4) (or (not p7) p5) (or (not p7) p6) (or p12 (not p8) (not p9) (not p10) (not p11)) (or (not p12) p8) (or (not p12) p9) (or (not p12) p10) (or (not p12) p11) (or p13 (not p3)) (or p13 (not p7)) (or p13 (not p12)) (or (not p13) p3 p7 p12) (= p1 (>= x0 3)) (= p2 (>= z1 2)) (= p3 (and p1 p2)) (= p4 (>= x0 3)) (= p5 (>= x1 3)) (= p6 (>= z2 2)) (= p7 (and p4 p5 p6)) (= p8 (>= x0 3)) (= p9 (>= x1 3)) (= p10 (>= x2 3)) (= p11 (>= z3 2)) (= p12 (and p8 p9 p10 p11)) (= p13 (or p3 p7 p12))) (not p13)))
(check-sat)
